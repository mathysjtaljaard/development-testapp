package org.taljaard.nextgear.mybatis.dao;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

public class ContractsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public ContractsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedIsNull() {
			addCriterion("amountRequested is null");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedIsNotNull() {
			addCriterion("amountRequested is not null");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedEqualTo(BigDecimal value) {
			addCriterion("amountRequested =", value, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedNotEqualTo(BigDecimal value) {
			addCriterion("amountRequested <>", value, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedGreaterThan(BigDecimal value) {
			addCriterion("amountRequested >", value, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("amountRequested >=", value, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedLessThan(BigDecimal value) {
			addCriterion("amountRequested <", value, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedLessThanOrEqualTo(BigDecimal value) {
			addCriterion("amountRequested <=", value, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedIn(List<BigDecimal> values) {
			addCriterion("amountRequested in", values, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedNotIn(List<BigDecimal> values) {
			addCriterion("amountRequested not in", values, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("amountRequested between", value1, value2, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andAmountRequestedNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("amountRequested not between", value1, value2, "amountRequested");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberIsNull() {
			addCriterion("businessNumber is null");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberIsNotNull() {
			addCriterion("businessNumber is not null");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberEqualTo(String value) {
			addCriterion("businessNumber =", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberNotEqualTo(String value) {
			addCriterion("businessNumber <>", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberGreaterThan(String value) {
			addCriterion("businessNumber >", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberGreaterThanOrEqualTo(String value) {
			addCriterion("businessNumber >=", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberLessThan(String value) {
			addCriterion("businessNumber <", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberLessThanOrEqualTo(String value) {
			addCriterion("businessNumber <=", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberLike(String value) {
			addCriterion("businessNumber like", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberNotLike(String value) {
			addCriterion("businessNumber not like", value, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberIn(List<String> values) {
			addCriterion("businessNumber in", values, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberNotIn(List<String> values) {
			addCriterion("businessNumber not in", values, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberBetween(String value1, String value2) {
			addCriterion("businessNumber between", value1, value2, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andBusinessNumberNotBetween(String value1, String value2) {
			addCriterion("businessNumber not between", value1, value2, "businessNumber");
			return (Criteria) this;
		}

		public Criteria andActivitationDateIsNull() {
			addCriterion("activitationDate is null");
			return (Criteria) this;
		}

		public Criteria andActivitationDateIsNotNull() {
			addCriterion("activitationDate is not null");
			return (Criteria) this;
		}

		public Criteria andActivitationDateEqualTo(Timestamp value) {
			addCriterion("activitationDate =", value, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateNotEqualTo(Timestamp value) {
			addCriterion("activitationDate <>", value, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateGreaterThan(Timestamp value) {
			addCriterion("activitationDate >", value, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateGreaterThanOrEqualTo(Timestamp value) {
			addCriterion("activitationDate >=", value, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateLessThan(Timestamp value) {
			addCriterion("activitationDate <", value, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateLessThanOrEqualTo(Timestamp value) {
			addCriterion("activitationDate <=", value, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateIn(List<Timestamp> values) {
			addCriterion("activitationDate in", values, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateNotIn(List<Timestamp> values) {
			addCriterion("activitationDate not in", values, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateBetween(Timestamp value1, Timestamp value2) {
			addCriterion("activitationDate between", value1, value2, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andActivitationDateNotBetween(Timestamp value1, Timestamp value2) {
			addCriterion("activitationDate not between", value1, value2, "activitationDate");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("status like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("status not like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<String> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<String> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("contractType is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("contractType is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(String value) {
			addCriterion("contractType =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(String value) {
			addCriterion("contractType <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(String value) {
			addCriterion("contractType >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(String value) {
			addCriterion("contractType >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(String value) {
			addCriterion("contractType <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(String value) {
			addCriterion("contractType <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLike(String value) {
			addCriterion("contractType like", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotLike(String value) {
			addCriterion("contractType not like", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<String> values) {
			addCriterion("contractType in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<String> values) {
			addCriterion("contractType not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(String value1, String value2) {
			addCriterion("contractType between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(String value1, String value2) {
			addCriterion("contractType not between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNull() {
			addCriterion("updateDate is null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNotNull() {
			addCriterion("updateDate is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateEqualTo(Timestamp value) {
			addCriterion("updateDate =", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotEqualTo(Timestamp value) {
			addCriterion("updateDate <>", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThan(Timestamp value) {
			addCriterion("updateDate >", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThanOrEqualTo(Timestamp value) {
			addCriterion("updateDate >=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThan(Timestamp value) {
			addCriterion("updateDate <", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThanOrEqualTo(Timestamp value) {
			addCriterion("updateDate <=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIn(List<Timestamp> values) {
			addCriterion("updateDate in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotIn(List<Timestamp> values) {
			addCriterion("updateDate not in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateBetween(Timestamp value1, Timestamp value2) {
			addCriterion("updateDate between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotBetween(Timestamp value1, Timestamp value2) {
			addCriterion("updateDate not between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNull() {
			addCriterion("createDate is null");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNotNull() {
			addCriterion("createDate is not null");
			return (Criteria) this;
		}

		public Criteria andCreateDateEqualTo(Timestamp value) {
			addCriterion("createDate =", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotEqualTo(Timestamp value) {
			addCriterion("createDate <>", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThan(Timestamp value) {
			addCriterion("createDate >", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThanOrEqualTo(Timestamp value) {
			addCriterion("createDate >=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThan(Timestamp value) {
			addCriterion("createDate <", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThanOrEqualTo(Timestamp value) {
			addCriterion("createDate <=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateIn(List<Timestamp> values) {
			addCriterion("createDate in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotIn(List<Timestamp> values) {
			addCriterion("createDate not in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateBetween(Timestamp value1, Timestamp value2) {
			addCriterion("createDate between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotBetween(Timestamp value1, Timestamp value2) {
			addCriterion("createDate not between", value1, value2, "createDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table contracts
	 * @mbg.generated  Sun Feb 04 21:29:41 EST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table contracts
     *
     * @mbg.generated do_not_delete_during_merge Sat Feb 03 20:37:27 EST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}